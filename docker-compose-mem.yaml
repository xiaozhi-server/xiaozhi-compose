services:
  memobase-server-api:
#    image: ghcr.io/memodb-io/memobase:main
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:memobase-0928
    container_name: memobase-server-api
    restart: always
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://example:example@xiaozhi-server-db:5432/example
      - REDIS_URL=redis://:example@xiaozhi-server-redis:6379/0
      - ACCESS_TOKEN=example
      - PROJECT_ID=example
      - API_EXPORT_PORT=${API_EXPORT_PORT}
      - API_HOSTS=${API_HOSTS}
      - USE_CORS=${USE_CORS}
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
    ports:
      - "8777:8000"
    networks:
      - xiaozhi-network
    depends_on:
      xiaozhi-server-db:
        condition: service_healthy
    volumes:
      - ./conf/memobase-config.yaml:/app/config.yaml
  xiaozhi-navidrome:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:navidrome
    #image: deluan/navidrome:0.58.0
    container_name: xiaozhi-navidrome
    restart: always
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "8555:4533"
    volumes:
      - ./navidrome_data:/data:rw
      - ./music:/music:ro
    environment:
      - ND_SCANSCHEDULE=1h
      - ND_LOGLEVEL=info
      - ND_SESSIONTIMEOUT=24h
      - ND_BASEURL=
    labels:
      createdBy: "Apps"
  aiproxy:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:aiproxy
    container_name: aiproxy
    env_file:
      - .env
    networks:
      - xiaozhi-network
   # ports:
   #   - "17000:17000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
    restart: always
networks:
  xiaozhi-network:
    driver: bridge
