services:
  xiaozhi-backend-go-server:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:backend-go-server-20250821
    container_name: xiaozhi-backend-go-server
    restart:  always
    volumes:
      - ./conf/xiaozhi-config.yaml:/workspace/config/config.yaml
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "8989:8989" # 请根据实际后端服务端口调整
  # manager-api和manager-web模块
  xiaozhi-server-dashboard:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:xiaozhi-dashboard
    container_name: xiaozhi-server-dashboard
    restart: always
    #network_mode:  host
    networks:
      - xiaozhi-network
    platform: linux/amd64
    depends_on:
      xiaozhi-server-db:
        condition: service_healthy
      xiaozhi-server-redis:
        condition: service_healthy
    ports:
      - "8002:8002"
    environment:
      - TZ=Asia/Shanghai
      - SPRING_DATASOURCE_DRUID_URL=jdbc:mysql://xiaozhi-server-db:3306/xiaozhi_esp32_server?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true&connectTimeout=30000&socketTimeout=30000&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
      - SPRING_DATASOURCE_DRUID_USERNAME=root
      - SPRING_DATASOURCE_DRUID_PASSWORD=123456
      - SPRING_DATA_REDIS_HOST=xiaozhi-server-redis
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
      - SPRING_DATA_REDIS_PORT=6379
    volumes:
      # 配置文件目录
      - ./uploadfile:/uploadfile
  xiaozhi-web-client:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:web-client
    container_name: xiaozhi-web-client
    networks:
      - xiaozhi-network
    ports:
      - "5001:5001"
      - "5002:5002"
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - WS_URL=ws://host.docker.internal:8989/xiaozhi/v1/
      - DEVICE_TOKEN=test
      - DEVICE_MAC=ba:8f:17:de:94:94
    restart: always
  # 数据库模块
  xiaozhi-server-db:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:mysql
    #image: mysql:latest
    container_name: xiaozhi-server-db
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    networks:
      - xiaozhi-network
    platform: linux/amd64
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=xiaozhi_esp32_server
      - MYSQL_INITDB_ARGS="--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
  xiaozhi-server-redis:
    image: redis:7.4
    restart: unless-stopped
    container_name: xiaozhi-server-redis
    env_file:
      - .env
    networks:
      - xiaozhi-network
    platform: linux/amd64
    ports:
      - "16379:6379"
    volumes:
      - ./redis_data:/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  navidrome:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:navidrome
    #image: deluan/navidrome:0.58.0
    container_name: navidrome
    restart: always
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "4533:4533"
    volumes:
      - ./navidrome_data:/data:rw
      - ./music:/music:ro
    environment:
      - ND_SCANSCHEDULE=1h
      - ND_LOGLEVEL=info
      - ND_SESSIONTIMEOUT=24h
      - ND_BASEURL=
    labels:
      createdBy: "Apps"
  aiproxy:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:aiproxy
    container_name: aiproxy
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "17000:17000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
    restart: always
networks:
  xiaozhi-network:
    driver: bridge
