services:
  xiaozhi-backend-go-server:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:backend-go-server
    container_name: xiaozhi-backend-go-server
    network_mode:  host
    restart:  always
    volumes:
      - ./conf/xiaozhi-config.json:/workspace/config/config.json
    env_file:
      - .env
    depends_on:
      - memobase-server-api
      - aiproxy
  # manager-api和manager-web模块
  xiaozhi-esp32-server-web:
    image: ghcr.nju.edu.cn/xinnan-tech/xiaozhi-esp32-server:web_latest
    container_name: xiaozhi-esp32-server-web
    restart: always
    networks:
      - xiaozhi-network
    platform: linux/amd64
    depends_on:
      xiaozhi-server-db:
        condition: service_healthy
      xiaozhi-server-redis:
        condition: service_healthy
    ports:
      # 智控台
      - "8002:8002"
    environment:
      - TZ=Asia/Shanghai
      - SPRING_DATASOURCE_DRUID_URL=jdbc:mysql://xiaozhi-server-db:3306/xiaozhi_server?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&nullCatalogMeansCurrent=true&connectTimeout=30000&socketTimeout=30000&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
      - SPRING_DATASOURCE_DRUID_USERNAME=root
      - SPRING_DATASOURCE_DRUID_PASSWORD=123456
      - SPRING_DATA_REDIS_HOST=xiaozhi-server-redis
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
      - SPRING_DATA_REDIS_PORT=6379
    volumes:
      # 配置文件目录
      - ./uploadfile:/uploadfile
  xiaozhi-web-client:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:web-client
    container_name: xiaozhi-web-client
    network_mode: host
    expose:
      - "5001/tcp"
    env_file:
      - .env
    environment:
      - WS_URL=${WS_URL}
      - DEVICE_TOKEN=${DEVICE_TOKEN}
    restart: always
  memobase-server-db:
    image: pgvector/pgvector:pg17
    restart: unless-stopped
    container_name: memobase-server-db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    platform: linux/amd64
    ports:
      - '15432:5432'
    networks:
      - xiaozhi-network
    volumes:
      - ./pgvector_data:/var/lib/postgresql/data
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U example -d example"]
      interval: 5s
      timeout: 5s
      retries: 5
  # 数据库模块
  xiaozhi-server-db:
    image: mysql:latest
    container_name: xiaozhi-server-db
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    networks:
      - default
    platform: linux/amd64
    expose:
      - 3306
    volumes:
      - ./mysql/data:/var/lib/mysql
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=xiaozhi_esp32_server
      - MYSQL_INITDB_ARGS="--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
  xiaozhi-server-redis:
    image: redis:7.4
    restart: unless-stopped
    container_name: xiaozhi-server-redis
    env_file:
      - .env
    networks:
      - xiaozhi-network
    platform: linux/amd64
    ports:
      - "16379:6379"
    volumes:
      - ./redis_data:/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  memobase-server-api:
#    image: ghcr.io/memodb-io/memobase:main
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:memobase
    container_name: memobase-server-api
    restart: always
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - PROJECT_ID=${PROJECT_ID}
      - API_EXPORT_PORT=${API_EXPORT_PORT}
      - API_HOSTS=${API_HOSTS}
      - USE_CORS=${USE_CORS}
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
    networks:
      - xiaozhi-network
    depends_on:
      memobase-server-db:
        condition: service_healthy
      xiaozhi-server-redis:
        condition: service_healthy
    ports:
      - '8000:8000'
    volumes:
      - ./conf/memobase-config.yaml:/app/config.yaml
  navidrome:
    image: deluan/navidrome:0.58.0
    container_name: navidrome
    restart: always
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "4533:4533"
    volumes:
      - ./navidrome_data:/data:rw
      - ./music:/music:ro
    environment:
      - ND_SCANSCHEDULE=1h
      - ND_LOGLEVEL=info
      - ND_SESSIONTIMEOUT=24h
      - ND_BASEURL=
    labels:
      createdBy: "Apps"
  aiproxy:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:aiproxy
    container_name: aiproxy
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "17000:17000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
    restart: always
networks:
  xiaozhi-network:
    driver: bridge
