services:
  memobase-server-db:
    image: pgvector/pgvector:pg17
    restart: unless-stopped
    container_name: memobase-server-db
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '15432:5432'
    networks:
      - xiaozhi-network
    volumes:
      - ./pgvector_data:/var/lib/postgresql/data
      # - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U example -d example"]
      interval: 5s
      timeout: 5s
      retries: 5
  memobase-server-redis:
    image: redis:7.4
    restart: unless-stopped
    container_name: memobase-server-redis
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
  memobase-server-api:
    image: ghcr.io/memodb-io/memobase:main
    container_name: memobase-server-api
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ACCESS_TOKEN=${ACCESS_TOKEN}
      - PROJECT_ID=${PROJECT_ID}
      - API_EXPORT_PORT=${API_EXPORT_PORT}
      - API_HOSTS=${API_HOSTS}
      - USE_CORS=${USE_CORS}
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
    networks:
      - xiaozhi-network
    depends_on:
      memobase-server-db:
        condition: service_healthy
      memobase-server-redis:
        condition: service_healthy
    ports:
      - '8000:8000'
    volumes:
      - ./conf/memobase-config.yaml:/app/config.yaml
  navidrome:
    image: deluan/navidrome:0.58.0
    container_name: navidrome
    restart: always
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "4533:4533"
    volumes:
      - ./navidrome_data:/data:rw
      - ./music:/music:ro
    environment:
      - ND_SCANSCHEDULE=1h
      - ND_LOGLEVEL=info
      - ND_SESSIONTIMEOUT=24h
      - ND_BASEURL=
    labels:
      createdBy: "Apps"
  xiaozhi-web-client:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:web-client
    container_name: xiaozhi-web-client
    network_mode: host
    env_file:
      - .env
    environment:
      - WS_URL=${WS_URL}
      - DEVICE_TOKEN=${DEVICE_TOKEN}
    restart: always
  aiproxy:
    image: registry.cn-shanghai.aliyuncs.com/dapp/xiaozhi:aiproxy
    container_name: aiproxy
    env_file:
      - .env
    networks:
      - xiaozhi-network
    ports:
      - "17000:17000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
    restart: always
volumes:
  memobase-server-db:
    driver: local
  memobase-server-redis:
    driver: local
  memobase-server-api:
    driver: local
  navidrome:
    driver: local
networks:
  xiaozhi-network:
    driver: bridge